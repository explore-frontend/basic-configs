{
    // "extends": "@vue/tsconfig/tsconfig.json",
    "compilerOptions": {
        "module": "ESNext",
        "moduleResolution": "Node",
        "resolveJsonModule": true,
        "useDefineForClassFields": true,

        // Required in Vue projects
        "jsx": "preserve",

        // `"noImplicitThis": true` is part of `strict`
        // Added again here in case some users decide to disable `strict`.
        // This enables stricter inference for data properties on `this`.
        "noImplicitThis": true,
        "strict": true,

        // For `<script setup>`
        // See <https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/#preserve-value-imports>
        "preserveValueImports": true,
        // Enforce using `import type` instead of `import` for types
        "importsNotUsedAsValues": "error",

        // A few notes:
        // - Vue 3 supports ES2016+
        // - For Vite, the actual compilation target is determined by the
        //   `build.target` option in the Vite config.
        //   So don't change the `target` field here. It has to be
        //   at least `ES2020` for dynamic `import()`s and `import.meta` to work correctly.
        // - If you are not using Vite, feel free to override the `target` field.
        "target": "ESNext",

        // Recommended
        "esModuleInterop": true,
        "forceConsistentCasingInFileNames": true,

        // TODO: 上面的应该用 extends，但是因为 typescript-eslint 不支持 pnpm 的符号链接，所以先复制粘贴过来

        // 为了能有合法的 .d.ts 检查
        "skipLibCheck": false,
        // 因为 vue 的 .d.ts 包含了 const enum
        "isolatedModules": false,
        // 数组取索引，加上一个 undefined
        "noUncheckedIndexedAccess": true,
        // override 要显式声明
        "noImplicitOverride": true,
        // 暂时开不了 undefined 和 未存在的区分
        "exactOptionalPropertyTypes": false,
        "types": []
    }
}
